<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" version="2.5">
  
  <!-- 스프링에서는 인코딩 처리를 위해  characterEncoding 클래스를 제공하며 web.xml 파일에 characterEncoding를 등록하면
  		모든 클라이언트의 요청에 대해 일괄적으로 인코딩을 처리할 수 있다. -->
  <filter>
  	<filter-name>characterEncoding</filter-name>
  	<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
  		<init-param>
  			<param-name>encoding</param-name>
  			<param-value>EUC-KR</param-value>
  		</init-param>
  </filter>
  
  <filter-mapping>
  	<filter-name>characterEncoding</filter-name>
  	<url-pattern>*.do</url-pattern>
  </filter-mapping>
  
  <!-- 서블릿 ? 클라이언트 요청을 처리하고 그 결과를 다시 클라이언트에게 전송하는 Servlet 클래스의 구현 규칙을 지킨 자바 프로그램
  		이것을 관리해주는 것이 서블릿 컨테이너-->
  <!-- 클라이언트가 .do 요청을 서버에 전달하면 서블릿 컨테이너는 web.xml파일에 action이라는 이름으로 등록된 DispatcherServlet 클래스의 객체를 생성 -->
  <servlet>
    <servlet-name>action</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
    	<param-name>contextConfigLocation</param-name>
    	<param-value>/WEB-INF/config/presentation-layer.xml</param-value>
    </init-param>
  </servlet>

  <servlet-mapping>
    <servlet-name>action</servlet-name>
    <url-pattern>*.do</url-pattern>
  </servlet-mapping>

  <!-- src/main/resources 소스 폴더에 위치한 스프링 설정파일을 ContextLoaderListener 가 읽어들이기 위한 설정 -->  
  <context-param>
  	<param-name>contextConfigLocation</param-name>
  	<param-value>classpath:applicationContext.xml</param-value>
  </context-param>
  
  <!-- DispatcherServlet이 생성되어 presentation-layer.xml 파일을 읽고 스프링 컨테이너를 구동하면 Controller 객체들이 메모리에 생성된다.
  	하지만 Controller 객체들이 생성되기 전에 누군가 먼저 applicationContext.xml 파일을 읽어 비즈니스 컴포넌트들을 메모리에 생성해야한다.
  	이때 사용하는 클래스가 스프링에서 제공하는 ContextLoaderListener 다.  -->
  <!-- ContextLoaderListener 클래스는 서블릿 컨테이너가 web.xml 파일을 읽어 구동될 때 자동으로 메모리에 생성된다. 
  	즉, ContextLoaderListener는 클라이언트의 요청이 없어도 컨테이너가 구동될 때 미리 로딩 되는 객체다. -->	
  <listener>
  	<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
</web-app>