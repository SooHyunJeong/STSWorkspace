<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">
	
	<!-- Properties 파일에 설정된 프로퍼티들을 이용하여 DataSource를 설정 -->
	<!-- 이 설정을 해줌으로써 applicationContext.xml 파일에 dataSource property value 값이 직접안들어가고 설정 파일에 따로 작성 할 수 있음 -->
	<context:property-placeholder location="classpath:config/database.properties"/>
	
	<!-- DataSource 설정 -->
	<!-- BasicDataSource 객체는 연결에 필요한 property들을 Setter 인젝션으로 설정해주면 됨. 그리고 BasicDataSource 객체가 삭제되기 전에 연결을 해제하기 위해 close 메소드를 destroy-method 속성으로 지정 -->
	<!-- xml에서 &를 참조자로 인식하기 때문에 url value 값에서 '&' 이게 사용되면 Error 발생 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>
	
	<!-- Mysql DataSource 부분에서는 로그를 확인하기 위해 property를 변경
		가끔 SQL이 잘못되어 에러가 발생하는 경우가 있는데, 이를 대비해 좀 더 자세히 로그를 조사할 수 있도록 로그 설정을 변경 
		database.properties 수정 및 resources 밑에 log4jdbc.log4j2.properties 생성 -->
	
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:sql-map-config.xml"></property>
	</bean>
	
	<bean class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSession"></constructor-arg>
	</bean>
	
</beans>
